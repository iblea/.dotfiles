#!/bin/bash


if [ -z "$(command -v fzf)" ]; then
    agrepm "$@"
    exit 1
fi

fzf_open_script="$HOME/.dotfiles/fzfscript/open_editor.sh"
fzf_execute="execute-silent"
if [ -z "$(command -v code)" ]; then
    fzf_execute="become"
fi
if [ -z "$(command -v code)" ] && [ -z "$(command -v vim)" ]; then
    agrepn "$@"
    exit 1
fi


# grepfzf ''
# exit 0

current_pwd="$(pwd)"
# grep_prefix='grepfzf'
# rg_prefix='rg --column --line-number --no-heading --color=always --smart-case'
# rg_prefix='grepfzf'
# rg_prefix="$HOME/.dotfiles/fzfscript/grepnfzf.sh"
rg_prefix="$HOME/.dotfiles/fzfscript/grepmfzf.sh"
preview_prefix="$HOME/.dotfiles/fzfscript/cat_n_preview.sh"
# preview_prefix="$HOME/.dotfiles/fzfscript/cat_m_preview.sh"



# /Users/ible/.dotfiles/grepfzf.sh "$@"
# exit 0


	# --bind "start:reload:echo -n -e $(grepfzf 'test')" \
	# --bind "change:reload:echo -n -e \"$(grepfzf {q})\" || true" \
    # --color hl:underline \


terminal_size=$(stty size < /dev/tty 2>/dev/null)
terminal_width=0
terminal_height=0

source "$HOME/.dotfiles/fzfscript/tty_size.sh"

if [ -n "$terminal_size" ]; then
    terminal_width=$(echo $terminal_size | awk '{print $2}')
    terminal_height=$(echo $terminal_size | awk '{print $1}')
fi

preview_options="up:14" # 6
if [ $(echo "$terminal_height") -ge $UP_HEIGHT_SIZE ]; then
    preview_options="up:16" # 6
elif [ $(echo "$terminal_width") -ge $RIGHT_WIDTH_SIZE ]; then
    preview_options="right:50%"
else

    if [ $(echo "$terminal_height") -ge $MAX_HEIGHT_SIZE ]; then
        preview_options="up:14" # 6 (6 + 6 + 1(highlight) + 1(wrap tmp len))
    elif [ $(echo "$terminal_height") -le $MIN_HEIGHT_SIZE ]; then
        preview_options="up:6" # 2
    else
        # echo "11 - 10" | bc
        preview_height=$(expr ${terminal_height} - 9)
        preview_options="up:${preview_height}" # 2
    fi
fi


if [ -z "$@" ]; then

fzf \
    --color hl+:underline \
    --disabled \
    --literal --ansi --read0 --cycle --info=inline  \
    --marker '═' --marker-multi-line '╔║╚' \
    --bind "start:reload:${rg_prefix} '' " \
    --bind "change:reload:${rg_prefix} {q} || true" \
    --bind "ctrl-a:half-page-up" \
    --bind "ctrl-d:half-page-down" \
    --prompt 'grepmfzf> ' \
    --delimiter '\n' \
    --preview "${preview_script} {1} " \
    --preview-window "${preview_options},wrap" \
    --bind "enter:${fzf_execute}( echo {1} | xargs -I{} ${fzf_open_script} ${current_pwd}/{} )"

    # --preview "${preview_prefix} '{1}' {q}" \
    # --preview-window 'up:6,wrap' \
    # --preview-window 'up,40%,border-bottom,+{2}+3/3,~3' \
    # --preview-window 'up,60%,border-bottom,+{2}+3/3,~3' \
    # --bind "enter:execute-silent(echo {1} | xargs -I{} code --goto ${current_pwd}/{})"

else

fzf \
    --color hl+:underline \
    --disabled \
    --literal --ansi --read0 --cycle --info=inline  \
    --marker '═' --marker-multi-line '╔║╚' \
    --query "$@" \
    --bind "start:reload:${rg_prefix} '$@' " \
    --bind "change:reload:${rg_prefix} {q} || true" \
    --bind "ctrl-a:half-page-up" \
    --bind "ctrl-d:half-page-down" \
    --prompt 'grepmfzf> ' \
    --delimiter '\n' \
    --preview "${preview_script} {1} " \
    --preview-window "${preview_options},wrap" \
    --bind "enter:${fzf_execute}( echo {1} | xargs -I{} ${fzf_open_script} ${current_pwd}/{} )"

    # ;--preview "${preview_prefix} '{1}' {q}" \
    # --preview-window 'up:6,wrap' \
    # --preview-window 'up,40%,border-bottom,+{2}+3/3,~3' \
    # --preview-window 'up,60%,border-bottom,+{2}+3/3,~3' \
    # --bind "enter:execute-silent(echo {1} | xargs -I{} code --goto ${current_pwd}/{})"

fi
